# Introduction to Data Science
# University of Maryland Baltimore COunty
# Professor: Feras Batarseh
# Study guide compiled by John Oberlin

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
Data wrangling/pre-processing:
  Methods:
    Sampling: |
      Subset of dataset. Sample selected in manner to allow unbiased
      representation of dataset.
  
    Cleaning: |
      Addressing formatting, standardization, duplicate, bad or missing data
      issues. Records with missing data can be dropped or the data point can be
      "imputed" by, eg, inputting the average for similar records.
      
    Normalizing: |
      Adjusting certain data to be better compared with other data of the same
      type. For example, some product reviews being value n of 3 stars and others
      being n of 5 stars. Should be calculated into a normalized value.
  
    Filtering: |
      Selecting subset of dataset for viewing or analysis. Selecting by feature
      /column filters out records/rows.
  
    Reduction: |
      Removing irrelevant or redundant features, ie columns.
  
    Pivoting: |
      Smaller table that summarizes dataset, possibly with aggregation like sum,
      average, count, etc.
  
    Aggregation: |
      Values of certain records/rows are grouped together to form one summary
      value. Functions include sum, average, count, variance, etc.

Data and databases:

  Kinds of data:
    Quantitative: data that can be measured or counted
    
    Categorical: data that can be sorted according to group, type, eg provinces
    
    Continuous: |
      data that is measured and whose value falls within a range, eg temperature
      (could be 1.5 degrees, or 1.45, 1.56, etc)
    
    Discrete: |
      data with a finite number of possible values, eg counting humans (cannot
      have 1.5 humans).
    
  Data types:
    Int/Real: 6, 700, 1099
    
    Long Int/Big Int: -2585653900
    
    Float/Decimal: 598.12463
    
    Boolean: 1, 0, TRUE, FALSE
    
    String/Text: Data is awesome!#123
    
    VarChar: G5312
    
    Date/time: 6/7/2019 07:15:24 pm

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
Generalization in ML:
  Main idea: |
    The task of learning machine making predictions on data it has not seen
    before. Data divided into training set and testing set. During learning,
    bias and variance can occur. Goal is to find sweet spot between variance and
    bias.
  
  Bias: |
    Difference between expected value and the true value of the predicted
    parameter.
    
  Variance: |
    How far values are spread out from their average. If model variance is high,
    relatively small changes in training data will dramatically affect output.
  
  Overfitting:
    Overfitting: |
      Fitted to every point, ie low bias, high variance, even fitted to noise.
    
    Solutions:
      - Reducing number of features in model.
      - Regularization methods for constraining the model, like ridge and lasso.
      - Get more training data.
      - Reduce noise in training data, eg outliers, errors.
  
  Underfitting:
    Underfitting: |
      Oversimplification, ignoring too many points, ie high bias, low variance.
    
    Solutions:
      - Selecting a more powerful model with more parameters.
      - Fitting more features and providing more data as input.
  
  Relation: |

    bias
    ^
    | .underfit
    |
    |
    |   .robust
    |           .overfit
    +--------------> variance

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
Data visualization:
  Types of outcomes:
    Trends: Values over time
    Correlations: Relationship of values of feature A vs feature B
    Outliers: Values in unusual region
  
  Visual analytics lifecycle:
    Data after transformation informs knowledge via:
      - Visualization after mapping and user interaction
      - Models after data mining and parameter refinement
    - Knowledge is feedback to data
      
  Chart/graph types:
    - bar chart
    - pie chart
    - line chart
    - area chart
    - scatter plot
    - bubble chart
    - heat map
    - radial chart
    
    Trees:
      - binary tree
      - organizational charts
      Tree terms: |
      
                      (A)
                       |
                       |
        (B)------------+---[edge]---(J)[node]
                                     |
                                     |
                        [leaf](D)----+----(H)[leaf]
    
    Networks/graphs:
      Can be:
        - directed, where edges show some kind of directional flow
        - undirected
        
      Can show:
        - key actors
        - structural properties
        - relationship strength
        - communities
        - diffusion patterns
      
      By using controls:
        - color
        - position
        - size
        - shape
        
      Layouts:
        - circular
        - sphere
        - plot
        - central (one to all)
        - random
  
  Chart guidelines:
    - start y-axis at 0
    - use consistent colors
    - order data appropriately (alpha, value, sequence)
    - use horizontal labels
    - do not compare multiple pie charts (stacked bar instead)
    - make sure percentage data sums to 100%
    - use no more than about four to five categories/lines per chart
    - use solid lines instead of dashed
    - label lines directly
    - lines should consume two-thirds of the y-axis
    - uniform edge length and minimize crossings/overlaps (networks)
    
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
Understanding users:
  User personas:
    - motivations
    - goals
    - frustrations
    - personality
    - tech literacy
    User control level:
      Beginner: How does it do? Where do I start?
      Intermediate: Remind me how to..., More features?
      Expert: Shortcuts? Automate? Customize?
  
  User classes: based on user's role in organization
  
  Product champion: |
    user who sees value in product, encourages others to get on board
  
  Ethnographic observation:
    ethnography: |
      scientific description of customs of individual peoples and cultures
    
    Methods:
      - observation
      - interviews
      - surveys
      - regulations
      - log analysis
      - cognitive analysis
      - task analysis
      - expert walkthrough
  
  Contextual inquiry: !!STOPPED HERE!! -JO

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
UI/UX and user-centered design:
  Main idea: |
    User should be thinking about the information, not the design. User
    perceives well-functioning visualization as reflection of quality data and
    organized company.

  Design approaches:
    Inside-out: |
      Develop story, collect data, and then add viz
    Outside-in: |
      Develop viz, collect data, and build story to support it
      
  Bridging two gulfs of execution and evaluation (Don Norman):
    In execution, the user:
      - plans goal
      - specifies goal in more detail
      - performs action on UI intending to reach goal
      
    In evaluation, the user:
      - perceives results
      - interprets results
      - compares results with intended goal

  Capturing user preferences:
    Data collection and analysis:
      Via:
        - User surveys
        - Observing users
        - Click and navigation data
        
      Kansei engineering:
        Kansei: |
          "aims at the development or improvement of products and services by
          translating the customer's psychological feelings and needs into the
          domain of product design (ie parameters)"
          
        Consumer affective responses: |
          CARs are psychological feelings resulting from interaction with
          product features
          
        Product form features: PFFs (or PFs?) are product's design
  
    Prototyping:
      - UML and wireframing for UI flow (software eg Visio, Balsamiq)
      - Spiral lifecycle incrementally involves users in design improvement
  
  Shneiderman's eight rules:
    1 Consistency: |
      in sequences of actions, identical terminology, and consistent commands.
  
    2 Shortcuts: |
      enable frequent users to reduce the number of interactions. eg
      abbreviations, function keys, hidden commands, and macro facilities.
    
    3 Informative feedback: |
      for every user action. Frequent and minor actions -> response minor;
      infrequent and major actions -> response major.
    
    4 Closure: |
      created by creating beginning, middle, and end. Gives users satisfaction
      of accomplishment.
    
    5 Simple error handling: |
      so user cannot make serious error. System should detect error and offer
      simple handling.
    
    6 Easy reversal of actions: |
      relieves anxiety, since user knows errors can be undone.
    
    7 Internal locus of control: |
      supported so user senses they are in charge of system Users are initiators
      of actions rather than responders.
    
    8 Short-term memory load: |
      reduced by designing simple design, consolidating multiple pages, reducing
      window motion, etc.
  
  Challenges:
    Uncertainty:
      - In data
      In requirements: |
        User may hide important facts intentionally or unintentionally due to
        politics, financials, privacy, regulations, etc.
      
    Adoption: |
      Communication. Get product champions and early adopters supporting
      dashboard to gain support across organization.
    
    Expectations: |
      Set and be clear about what dashboard will do, how it will function, and
      when it will be delivered. Constraints due to time, budget.
      
  Check out:
    Two gulfs: https://youtu.be/bg4UwyPPZ6U
    Kansei: https://en.wikipedia.org/wiki/Kansei_engineering
    Shneiderman: |
      https://faculty.washington.edu/jtenenbg/courses/360/f04/sessions
      /schneidermanGoldenRules.html
    Visio: https://products.office.com/en-us/visio/flowchart-software
